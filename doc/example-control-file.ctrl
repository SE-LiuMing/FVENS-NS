;; Sample control file for FVENS
 ; Steady case

io {
	mesh_file                    "FVENS/testcases/some_viscous_case/grids/some_mesh.msh"
	solution_output_file         "visc-case.vtu"
	log_file_prefix              "visc-case-log"
	convergence_history_required true
}

flow_conditions 
{
	;; Type of flow to solve for - euler or navierstokes
	flow_type                     navierstokes
	
	adiabatic_index               1.4
	
	;; Angle of attack in degrees
	angle_of_attack               2.0
	
	freestream_Mach_number        0.5
	
	freestream_Reynolds_number    5000.0
	
	;; Free-streeam temperature in Kelvin
	freestream_temperature        290.0
	
	Prandtl_number                0.72
	
	;; Optional - false by default, in which case Sutherland model is used
	use_constant_viscosity        false
}

bc
{
	;; Markers in the mesh file and type of boundary condition corresponding to each kind of boundary.
	 ; Some boundary conditions require boundary values and others require options as well
	 
	bc0 {
		type                     farfield
		marker                    4
	}

	bc1 {
		type                     subsonic_inflow
		marker                    3
		
		;; Non-dimensional total pressure at inflow,
		 ; non-dimensionalized by free-stream density times square of free-stream velocity
		 ; and total temperature in Kelvin at inflow (in that order)
		boundary_values           2.0  373.0
	}
	
	bc2 {
		type                    adiabaticwall
		marker                   5
		
	    ;; Non-dimensional velocity tangential to the wall
		boundary_values         20.0
	}
	
	bc3 {
		type                   isothermalwall
		marker                  7
		
		;; Non-dimensional tangential velocity and temperature in Kelvin (in that order
		boundary_values       10.0  290.0
	}
	
	;; List of boundary markers at which surface output is required
	 ; and are to be treated as walls, ie, CL and CD are computed
	listof_output_wall_boundaries    5 7
	
	listof_output_other_boundaries   4
	
	surface_output_file_prefix       "2dcyl"
}

time {
	;; steady or unsteady
	simulation_type           steady
}

spatial_discretization 
{
	;; Numerical flux to use- LLF,VanLeer,HLL,AUSM,Roe,HLLC
	inviscid_flux                    Roe
	
	;; Gradient computation method - none (first-order), leastSquares, greenGauss
	gradient_method                  leastsquares
	
	;; Limiter for shock-capturing - none, Venkatakrishnan, VanAlbada, WENO
	limiter                          WENO
	;; A parameter controlling the limiter - the meaning differs with the limiter
	limiter_parameter                20.0
}

;; Pseudo-time continuation settings for the nonlinear solver
pseudotime 
{
	pseudotime_stepping_type    implicit
	
	;; The solver which computes the final solution
	main {
		cfl_min                  100.0
		cfl_max                  2000.0
		tolerance                1e-5
		max_timesteps            500
	}
	
	;; The solver which computes an initial guess for the main solver
	 ; Uses a first-order spatial discretization for steady cases
	initialization {	
		cfl_min                  50.0
		cfl_max                  500.0
		tolerance                1e-1
		max_timesteps            50
	}
}

;; Inviscid flux function to use for computing the Jacobian for implicit solvers
 ; Apart from all the fluxes available, 'consistent' can be specified.
 ; This will cause FVENS to use the same flux as specified above for
 ; the spatial discretization (usually a good choice, if available).
Jacobian_inviscid_flux         consistent

